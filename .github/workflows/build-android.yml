name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'debug'
        type: choice
        options:
          - debug
          - release

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: 33
        build-tools: 33.0.2

    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Install global dependencies
      run: |
        npm install -g cordova@latest
        cordova telemetry off

    - name: Install project dependencies
      run: npm install

    - name: Add Android platform
      run: |
        cordova platform add android@latest
        cordova plugin save

    - name: Build debug APK
      if: github.event.inputs.build_type == 'debug' || github.event.inputs.build_type == ''
      run: |
        cordova build android --debug
        echo "APK_PATH=platforms/android/app/build/outputs/apk/debug/app-debug.apk" >> $GITHUB_ENV
        echo "APK_NAME=MyKitchen-debug.apk" >> $GITHUB_ENV

    - name: Build release APK
      if: github.event.inputs.build_type == 'release'
      run: |
        cordova build android --release
        echo "APK_PATH=platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk" >> $GITHUB_ENV
        echo "APK_NAME=MyKitchen-release.apk" >> $GITHUB_ENV

    - name: Sign release APK (if release build)
      if: github.event.inputs.build_type == 'release'
      run: |
        # Note: For production, you should use GitHub Secrets for signing
        echo "Release APK built but not signed. Add signing configuration for production."

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.APK_NAME }}
        path: ${{ env.APK_PATH }}
        retention-days: 30

    - name: Create Release (on tag push)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ env.APK_PATH }}
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Comment APK info on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'ðŸŽ‰ APK built successfully! Download it from the Actions artifacts.'
          })